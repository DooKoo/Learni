//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Learnie.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WcfLearnie")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Progress {
            get {
                return this.ProgressField;
            }
            set {
                if ((this.ProgressField.Equals(value) != true)) {
                    this.ProgressField = value;
                    this.RaisePropertyChanged("Progress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lesson", Namespace="http://schemas.datacontract.org/2004/07/WcfLearnie")]
    [System.SerializableAttribute()]
    public partial class Lesson : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HtmlContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Learnie.ServiceReference.TestQuestion[] QuestionnaireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HtmlContent {
            get {
                return this.HtmlContentField;
            }
            set {
                if ((object.ReferenceEquals(this.HtmlContentField, value) != true)) {
                    this.HtmlContentField = value;
                    this.RaisePropertyChanged("HtmlContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Learnie.ServiceReference.TestQuestion[] Questionnaire {
            get {
                return this.QuestionnaireField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionnaireField, value) != true)) {
                    this.QuestionnaireField = value;
                    this.RaisePropertyChanged("Questionnaire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TestQuestion", Namespace="http://schemas.datacontract.org/2004/07/WcfLearnie")]
    [System.SerializableAttribute()]
    public partial class TestQuestion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] AnswersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CorrectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Answers {
            get {
                return this.AnswersField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswersField, value) != true)) {
                    this.AnswersField = value;
                    this.RaisePropertyChanged("Answers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Correct {
            get {
                return this.CorrectField;
            }
            set {
                if ((this.CorrectField.Equals(value) != true)) {
                    this.CorrectField = value;
                    this.RaisePropertyChanged("Correct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/WcfLearnie")]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerField, value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorName {
            get {
                return this.AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNameField, value) != true)) {
                    this.AuthorNameField = value;
                    this.RaisePropertyChanged("AuthorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Authorize", ReplyAction="http://tempuri.org/IService/AuthorizeResponse")]
        Learnie.ServiceReference.User Authorize(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Authorize", ReplyAction="http://tempuri.org/IService/AuthorizeResponse")]
        System.Threading.Tasks.Task<Learnie.ServiceReference.User> AuthorizeAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLessons", ReplyAction="http://tempuri.org/IService/GetLessonsResponse")]
        Learnie.ServiceReference.Lesson[] GetLessons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLessons", ReplyAction="http://tempuri.org/IService/GetLessonsResponse")]
        System.Threading.Tasks.Task<Learnie.ServiceReference.Lesson[]> GetLessonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddUser", ReplyAction="http://tempuri.org/IService/AddUserResponse")]
        bool AddUser(Learnie.ServiceReference.User newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddUser", ReplyAction="http://tempuri.org/IService/AddUserResponse")]
        System.Threading.Tasks.Task<bool> AddUserAsync(Learnie.ServiceReference.User newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BlockUser", ReplyAction="http://tempuri.org/IService/BlockUserResponse")]
        bool BlockUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BlockUser", ReplyAction="http://tempuri.org/IService/BlockUserResponse")]
        System.Threading.Tasks.Task<bool> BlockUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteUser", ReplyAction="http://tempuri.org/IService/DeleteUserResponse")]
        bool DeleteUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteUser", ReplyAction="http://tempuri.org/IService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddLesson", ReplyAction="http://tempuri.org/IService/AddLessonResponse")]
        void AddLesson(Learnie.ServiceReference.Lesson newLesson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddLesson", ReplyAction="http://tempuri.org/IService/AddLessonResponse")]
        System.Threading.Tasks.Task AddLessonAsync(Learnie.ServiceReference.Lesson newLesson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteLesson", ReplyAction="http://tempuri.org/IService/DeleteLessonResponse")]
        bool DeleteLesson(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteLesson", ReplyAction="http://tempuri.org/IService/DeleteLessonResponse")]
        System.Threading.Tasks.Task<bool> DeleteLessonAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddQuestion", ReplyAction="http://tempuri.org/IService/AddQuestionResponse")]
        void AddQuestion(string username, string title, string questionText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddQuestion", ReplyAction="http://tempuri.org/IService/AddQuestionResponse")]
        System.Threading.Tasks.Task AddQuestionAsync(string username, string title, string questionText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetQuestions", ReplyAction="http://tempuri.org/IService/GetQuestionsResponse")]
        Learnie.ServiceReference.Question[] GetQuestions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetQuestions", ReplyAction="http://tempuri.org/IService/GetQuestionsResponse")]
        System.Threading.Tasks.Task<Learnie.ServiceReference.Question[]> GetQuestionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/QuestionAnswer", ReplyAction="http://tempuri.org/IService/QuestionAnswerResponse")]
        void QuestionAnswer(string title, string answer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/QuestionAnswer", ReplyAction="http://tempuri.org/IService/QuestionAnswerResponse")]
        System.Threading.Tasks.Task QuestionAnswerAsync(string title, string answer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUsers", ReplyAction="http://tempuri.org/IService/GetUsersResponse")]
        Learnie.ServiceReference.User[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUsers", ReplyAction="http://tempuri.org/IService/GetUsersResponse")]
        System.Threading.Tasks.Task<Learnie.ServiceReference.User[]> GetUsersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Learnie.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Learnie.ServiceReference.IService>, Learnie.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Learnie.ServiceReference.User Authorize(string username, string password) {
            return base.Channel.Authorize(username, password);
        }
        
        public System.Threading.Tasks.Task<Learnie.ServiceReference.User> AuthorizeAsync(string username, string password) {
            return base.Channel.AuthorizeAsync(username, password);
        }
        
        public Learnie.ServiceReference.Lesson[] GetLessons() {
            return base.Channel.GetLessons();
        }
        
        public System.Threading.Tasks.Task<Learnie.ServiceReference.Lesson[]> GetLessonsAsync() {
            return base.Channel.GetLessonsAsync();
        }
        
        public bool AddUser(Learnie.ServiceReference.User newUser) {
            return base.Channel.AddUser(newUser);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserAsync(Learnie.ServiceReference.User newUser) {
            return base.Channel.AddUserAsync(newUser);
        }
        
        public bool BlockUser(string username) {
            return base.Channel.BlockUser(username);
        }
        
        public System.Threading.Tasks.Task<bool> BlockUserAsync(string username) {
            return base.Channel.BlockUserAsync(username);
        }
        
        public bool DeleteUser(string username) {
            return base.Channel.DeleteUser(username);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(string username) {
            return base.Channel.DeleteUserAsync(username);
        }
        
        public void AddLesson(Learnie.ServiceReference.Lesson newLesson) {
            base.Channel.AddLesson(newLesson);
        }
        
        public System.Threading.Tasks.Task AddLessonAsync(Learnie.ServiceReference.Lesson newLesson) {
            return base.Channel.AddLessonAsync(newLesson);
        }
        
        public bool DeleteLesson(string title) {
            return base.Channel.DeleteLesson(title);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteLessonAsync(string title) {
            return base.Channel.DeleteLessonAsync(title);
        }
        
        public void AddQuestion(string username, string title, string questionText) {
            base.Channel.AddQuestion(username, title, questionText);
        }
        
        public System.Threading.Tasks.Task AddQuestionAsync(string username, string title, string questionText) {
            return base.Channel.AddQuestionAsync(username, title, questionText);
        }
        
        public Learnie.ServiceReference.Question[] GetQuestions() {
            return base.Channel.GetQuestions();
        }
        
        public System.Threading.Tasks.Task<Learnie.ServiceReference.Question[]> GetQuestionsAsync() {
            return base.Channel.GetQuestionsAsync();
        }
        
        public void QuestionAnswer(string title, string answer) {
            base.Channel.QuestionAnswer(title, answer);
        }
        
        public System.Threading.Tasks.Task QuestionAnswerAsync(string title, string answer) {
            return base.Channel.QuestionAnswerAsync(title, answer);
        }
        
        public Learnie.ServiceReference.User[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<Learnie.ServiceReference.User[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
    }
}
